<?php

namespace mainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PatientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitRepository extends EntityRepository
{
   public function myFindAll($i){
        $query = $this->createQueryBuilder('p')
               ->orderBy('p.date', 'ASC')
               ->setFirstResult($i)
               ->setMaxResults(6)
               ->getQuery();
        return $query->getResult();
    }
    
     public function myFindByLibelle($libelle){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
               ->setParameters(array('libelle'=>'%'.$libelle.'%'))
               ->orderBy('p.date', 'ASC')
               ->getQuery();
        return $query->getResult();
    }
    
     public function myFiltreFindProduit($libelle,$cat,$dmin,$dmax,$pmin,$pmax){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
               ->andWhere('p.idcategorie = :cat')
              
                   ->andWhere('p.prix >= :pmin')
                 ->andWhere('p.prix <= :pmax')
               ->setParameters(array('libelle'=>'%'.$libelle.'%','cat'=>$cat,'pmin'=>$pmin,'pmax'=>$pmax))
               ->orderBy('p.date', 'ASC')
               ->getQuery();
        return $query->getResult();
    }
    
     public function myFiltreFindProduitAll($libelle,$dmin,$dmax,$pmin,$pmax){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
           
              
                   ->andWhere('p.prix >= :pmin')
                 ->andWhere('p.prix <= :pmax')
               ->setParameters(array('libelle'=>'%'.$libelle.'%','pmin'=>$pmin,'pmax'=>$pmax))
               ->orderBy('p.date', 'ASC')
               ->getQuery();
        return $query->getResult();
    }
    
      public function myFiltreFindProduitMax($libelle,$cat,$dmin,$dmax,$pmin,$pmax,$i){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
               ->andWhere('p.idcategorie = :cat')
              
               ->andWhere('p.prix >= :pmin')
               ->andWhere('p.prix <= :pmax')
               ->setParameters(array('libelle'=>'%'.$libelle.'%','cat'=>$cat,'pmin'=>$pmin,'pmax'=>$pmax))
               ->orderBy('p.date', 'ASC')
               ->setFirstResult($i)
               ->setMaxResults(6)
               ->getQuery();
        return $query->getResult();
    }
     public function myFiltreFindProduitMaxALL($libelle,$dmin,$dmax,$pmin,$pmax,$i){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
   
              
               ->andWhere('p.prix >= :pmin')
               ->andWhere('p.prix <= :pmax')
               ->setParameters(array('libelle'=>'%'.$libelle.'%','pmin'=>$pmin,'pmax'=>$pmax))
               ->orderBy('p.date', 'ASC')
               ->setFirstResult($i)
               ->setMaxResults(6)
               ->getQuery();
        return $query->getResult();
    }
    
      public function myFindByNbVente(){
     $query = $this->createQueryBuilder('p')
               ->orderBy('p.nbVente', 'DESC')
               ->setFirstResult(0)
               ->setMaxResults(2)
               ->getQuery();
        return $query->getResult();
    }
    
         public function myFindByCategorie($id){
        $query = $this->createQueryBuilder('p')
               ->where('p.idcategorie = :id')
               ->setParameters(array('id'=>$id))
               ->orderBy('p.date', 'ASC')
               ->getQuery();
        return $query->getResult();
    }
    
         public function myCountByCategorie($id){
        $query = $this->createQueryBuilder('p')
               ->where('p.idcategorie = :id')
               ->setParameters(array('id'=>$id))
               ->orderBy('p.date', 'ASC')
               ->getQuery();
        return $query->getResult();
    }
    
     public function myFindByLibelleMax($libelle,$i){
        $query = $this->createQueryBuilder('p')
               ->where('p.libelle LIKE :libelle')
               ->setParameters(array('libelle'=>'%'.$libelle.'%'))
               ->orderBy('p.date', 'ASC')
               ->setFirstResult($i)
               ->setMaxResults(6)
               ->getQuery();
        return $query->getResult();
    }
    
        public function myFindByCategorieMax($id,$i){
        $query = $this->createQueryBuilder('p')
               ->where('p.idcategorie = :id')
               ->setParameters(array('id'=>$id))
               ->orderBy('p.date', 'ASC')
               ->setFirstResult($i)
               ->setMaxResults(6)
               ->getQuery();
        return $query->getResult();
    }
}
